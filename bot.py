import discord
from discord import app_commands
from discord.ext import commands
import os
import random
import string
from keep_alive import keep_alive  

intents = discord.Intents.default()
intents.message_content = True
intents.members = True
bot = commands.Bot(command_prefix="?", intents=intents)

# ================== Channel IDs (–∑–∞–º—ñ–Ω–∏ –Ω–∞ —Å–≤–æ—ó) ==================
RULES_CHANNEL_ID = 1351689723369754634
INFO_CHANNEL_ID = 1351690459923349634
SUPPORT_CHANNEL_ID = 1411789053921202286
EXECUTORS_CHANNEL_ID = 1404173340125429792

# ================== Role Names (–¥–ª—è –¥–æ—Å—Ç—É–ø—É) ==================
STAFF_ROLE_NAME = "Staff Team"
NEXUS_ROLE_NAME = "NexusVision Team"

# ================== –ü–æ–¥—ñ—ó ==================
@bot.event
async def on_ready():
    await bot.tree.sync()
    print(f"‚úÖ Bot {bot.user} is online and slash commands synced!")

# ================== Slash-–∫–æ–º–∞–Ω–¥–∏ ==================
@bot.tree.command(name="get_ar2_script", description="Get the AR2 Script")
async def get_ar2_script(interaction: discord.Interaction):
    script = '```lua\nloadstring(game:HttpGet("https://raw.githubusercontent.com/UnicoreRoblox/Unicore/refs/heads/main/ApocalypseRising2.luau"))()\n```'
    await interaction.response.send_message(script, ephemeral=True)

@bot.tree.command(name="get_universal_script", description="Get the Universal Script")
async def get_universal_script(interaction: discord.Interaction):
    script = '```lua\nloadstring(game:HttpGet("https://raw.githubusercontent.com/NightFallScript/Unicore/refs/heads/main/DoorsUnicore"))()\n```'
    await interaction.response.send_message(script, ephemeral=True)

@bot.tree.command(name="rules", description="Link to rules channel")
async def rules(interaction: discord.Interaction):
    channel = bot.get_channel(RULES_CHANNEL_ID)
    if channel:
        await interaction.response.send_message(f"üìú Rules are here: {channel.mention}", ephemeral=True)
    else:
        await interaction.response.send_message("‚ùå Rules channel not found.", ephemeral=True)

@bot.tree.command(name="info", description="Link to info channel")
async def info(interaction: discord.Interaction):
    channel = bot.get_channel(INFO_CHANNEL_ID)
    if channel:
        await interaction.response.send_message(f"‚ÑπÔ∏è Info is here: {channel.mention}", ephemeral=True)
    else:
        await interaction.response.send_message("‚ùå Info channel not found.", ephemeral=True)

@bot.tree.command(name="support", description="Link to support channel")
async def support(interaction: discord.Interaction):
    channel = bot.get_channel(SUPPORT_CHANNEL_ID)
    if channel:
        await interaction.response.send_message(f"üõ†Ô∏è Support is here: {channel.mention}", ephemeral=True)
    else:
        await interaction.response.send_message("‚ùå Support channel not found.", ephemeral=True)

@bot.tree.command(name="support_executors", description="Link to executors channel")
async def support_executors(interaction: discord.Interaction):
    channel = bot.get_channel(EXECUTORS_CHANNEL_ID)
    if channel:
        await interaction.response.send_message(f"‚öôÔ∏è Executors are here: {channel.mention}", ephemeral=True)
    else:
        await interaction.response.send_message("‚ùå Executors channel not found.", ephemeral=True)

@bot.tree.command(name="help", description="List all available commands")
async def help_command(interaction: discord.Interaction):
    embed = discord.Embed(title="üìñ Command List", color=0x2b2d31)
    embed.add_field(name="/get_ar2_script", value="Get AR2 Script", inline=False)
    embed.add_field(name="/get_universal_script", value="Get Universal Script", inline=False)
    embed.add_field(name="/rules", value="Show rules channel", inline=False)
    embed.add_field(name="/info", value="Show info channel", inline=False)
    embed.add_field(name="/support", value="Show support channel", inline=False)
    embed.add_field(name="/support_executors", value="Show executors channel", inline=False)
    embed.add_field(name="/changerole", value="Change user roles (Staff/Nexus only)", inline=False)
    embed.add_field(name="/generatekey", value="Generate key (Nexus only)", inline=False)
    await interaction.response.send_message(embed=embed, ephemeral=True)

# ================== /changerole ==================
@bot.tree.command(name="changerole", description="–ó–º—ñ–Ω–∏—Ç–∏ —Ä–æ–ª—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ (—Ç—ñ–ª—å–∫–∏ –¥–ª—è Staff Team —Ç–∞ NexusVision Team)")
@app_commands.describe(
    member="–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á, —è–∫–æ–º—É —Ö–æ—á–µ—à –∑–º—ñ–Ω–∏—Ç–∏ —Ä–æ–ª—å",
    role="–†–æ–ª—å, —è–∫—É —Ö–æ—á–µ—à –≤–∏–¥–∞—Ç–∏ –∞–±–æ –∑–∞–±—Ä–∞—Ç–∏"
)
async def changerole(interaction: discord.Interaction, member: discord.Member, role: discord.Role):
    if not any(r.name in [STAFF_ROLE_NAME, NEXUS_ROLE_NAME] for r in interaction.user.roles):
        await interaction.response.send_message("‚ùå –£ —Ç–µ–±–µ –Ω–µ–º–∞—î –¥–æ—Å—Ç—É–ø—É –¥–æ —Ü—ñ—î—ó –∫–æ–º–∞–Ω–¥–∏.", ephemeral=True)
        return

    if role in member.roles:
        await member.remove_roles(role)
        await interaction.response.send_message(f"‚úÖ –†–æ–ª—å {role.mention} **–∑–Ω—è—Ç–æ** –∑ {member.mention}.", ephemeral=True)
    else:
        await member.add_roles(role)
        await interaction.response.send_message(f"‚úÖ –†–æ–ª—å {role.mention} **–≤–∏–¥–∞–Ω–æ** {member.mention}.", ephemeral=True)

# ================== /generatekey ==================
@bot.tree.command(name="generatekey", description="–ì–µ–Ω–µ—Ä—É—î –∫–ª—é—á –¥–æ—Å—Ç—É–ø—É (—Ç—ñ–ª—å–∫–∏ NexusVision Team)")
@app_commands.describe(
    active="–ß–∏ –∞–∫—Ç–∏–≤–Ω–∏–π –∫–ª—é—á (True/False)",
    days="–ù–∞ —Å–∫—ñ–ª—å–∫–∏ –¥–Ω—ñ–≤ (7, 30, 90, 100000)"
)
async def generatekey(interaction: discord.Interaction, active: bool, days: int):
    if not any(r.name == NEXUS_ROLE_NAME for r in interaction.user.roles):
        await interaction.response.send_message("‚ùå –¢–∏ –Ω–µ –º–∞—î—à –¥–æ—Å—Ç—É–ø—É –¥–æ —Ü—ñ—î—ó –∫–æ–º–∞–Ω–¥–∏.", ephemeral=True)
        return

    if days not in [7, 30, 90, 100000]:
        await interaction.response.send_message("‚ùå –ù–µ–≤—ñ—Ä–Ω–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –¥–Ω—ñ–≤. –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π: 7, 30, 90 –∞–±–æ 100000.", ephemeral=True)
        return

    # –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è –∫–ª—é—á–∞: 4 –±–ª–æ–∫–∏ –ø–æ 4 –≤–µ–ª–∏–∫—ñ –±—É–∫–≤–∏
    key = "-".join(
        "".join(random.choices(string.ascii_uppercase + string.digits, k=4))
        for _ in range(4)
    )

    embed = discord.Embed(
        title="üîë –ó–≥–µ–Ω–µ—Ä–æ–≤–∞–Ω–æ –∫–ª—é—á",
        color=0x00ff88
    )
    embed.add_field(name="–ö–ª—é—á", value=f"```{key}```", inline=False)
    embed.add_field(name="–ê–∫—Ç–∏–≤–Ω–∏–π", value=str(active), inline=True)
    embed.add_field(name="–î—ñ–π—Å–Ω–∏–π (–¥–Ω—ñ–≤)", value=str(days), inline=True)
    embed.set_footer(text=f"–ó–∞–ø—Ä–æ—Å–∏–≤: {interaction.user}", icon_url=interaction.user.display_avatar.url)

    await interaction.response.send_message(embed=embed, ephemeral=True)

# ================== Legacy Panel (?scripts) ==================
@bot.command(name="scripts")
async def scripts(ctx):
    embed = discord.Embed(
        title="üìú Script Panel",
        description="This script panel is for the project : **Unicore**\n\n"
                    "Use the buttons below to get Universal Script or AR2 Script",
        color=0x2b2d31
    )

    view = discord.ui.View()

    async def universal_callback(interaction: discord.Interaction):
        script = '```lua\nloadstring(game:HttpGet("https://raw.githubusercontent.com/NightFallScript/Unicore/refs/heads/main/DoorsUnicore"))()\n```'
        await interaction.response.send_message(script, ephemeral=True)

    universal_button = discord.ui.Button(label="üìú Get Universal Script", style=discord.ButtonStyle.secondary)
    universal_button.callback = universal_callback
    view.add_item(universal_button)

    async def ar2_callback(interaction: discord.Interaction):
        script = '```lua\nloadstring(game:HttpGet("https://raw.githubusercontent.com/UnicoreRoblox/Unicore/refs/heads/main/ApocalypseRising2.luau"))()\n```'
        await interaction.response.send_message(script, ephemeral=True)

    ar2_button = discord.ui.Button(label="üìú Get AR2 Script", style=discord.ButtonStyle.secondary)
    ar2_button.callback = ar2_callback
    view.add_item(ar2_button)

    await ctx.send(embed=embed, view=view)

# ================== –ó–∞–ø—É—Å–∫ ==================
keep_alive()
bot.run(os.getenv("TOKEN"))
